/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicImport } from './routes/_public'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as PublicLoginImport } from './routes/_public/login'
import { Route as AuthenticatedTrpcDemoImport } from './routes/_authenticated/trpc-demo'
import { Route as AuthenticatedHonoDemoImport } from './routes/_authenticated/hono-demo'
import { Route as AuthenticatedContactImport } from './routes/_authenticated/contact'
import { Route as AuthenticatedAboutImport } from './routes/_authenticated/about'

// Create/Update Routes

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const PublicLoginRoute = PublicLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => PublicRoute,
} as any)

const AuthenticatedTrpcDemoRoute = AuthenticatedTrpcDemoImport.update({
  id: '/trpc-demo',
  path: '/trpc-demo',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedHonoDemoRoute = AuthenticatedHonoDemoImport.update({
  id: '/hono-demo',
  path: '/hono-demo',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedContactRoute = AuthenticatedContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAboutRoute = AuthenticatedAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/about': {
      id: '/_authenticated/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthenticatedAboutImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/contact': {
      id: '/_authenticated/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof AuthenticatedContactImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/hono-demo': {
      id: '/_authenticated/hono-demo'
      path: '/hono-demo'
      fullPath: '/hono-demo'
      preLoaderRoute: typeof AuthenticatedHonoDemoImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/trpc-demo': {
      id: '/_authenticated/trpc-demo'
      path: '/trpc-demo'
      fullPath: '/trpc-demo'
      preLoaderRoute: typeof AuthenticatedTrpcDemoImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_public/login': {
      id: '/_public/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof PublicLoginImport
      parentRoute: typeof PublicImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedAboutRoute: typeof AuthenticatedAboutRoute
  AuthenticatedContactRoute: typeof AuthenticatedContactRoute
  AuthenticatedHonoDemoRoute: typeof AuthenticatedHonoDemoRoute
  AuthenticatedTrpcDemoRoute: typeof AuthenticatedTrpcDemoRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAboutRoute: AuthenticatedAboutRoute,
  AuthenticatedContactRoute: AuthenticatedContactRoute,
  AuthenticatedHonoDemoRoute: AuthenticatedHonoDemoRoute,
  AuthenticatedTrpcDemoRoute: AuthenticatedTrpcDemoRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface PublicRouteChildren {
  PublicLoginRoute: typeof PublicLoginRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicLoginRoute: PublicLoginRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof PublicRouteWithChildren
  '/about': typeof AuthenticatedAboutRoute
  '/contact': typeof AuthenticatedContactRoute
  '/hono-demo': typeof AuthenticatedHonoDemoRoute
  '/trpc-demo': typeof AuthenticatedTrpcDemoRoute
  '/login': typeof PublicLoginRoute
  '/': typeof AuthenticatedIndexRoute
}

export interface FileRoutesByTo {
  '': typeof PublicRouteWithChildren
  '/about': typeof AuthenticatedAboutRoute
  '/contact': typeof AuthenticatedContactRoute
  '/hono-demo': typeof AuthenticatedHonoDemoRoute
  '/trpc-demo': typeof AuthenticatedTrpcDemoRoute
  '/login': typeof PublicLoginRoute
  '/': typeof AuthenticatedIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_public': typeof PublicRouteWithChildren
  '/_authenticated/about': typeof AuthenticatedAboutRoute
  '/_authenticated/contact': typeof AuthenticatedContactRoute
  '/_authenticated/hono-demo': typeof AuthenticatedHonoDemoRoute
  '/_authenticated/trpc-demo': typeof AuthenticatedTrpcDemoRoute
  '/_public/login': typeof PublicLoginRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/contact'
    | '/hono-demo'
    | '/trpc-demo'
    | '/login'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/about' | '/contact' | '/hono-demo' | '/trpc-demo' | '/login' | '/'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_public'
    | '/_authenticated/about'
    | '/_authenticated/contact'
    | '/_authenticated/hono-demo'
    | '/_authenticated/trpc-demo'
    | '/_public/login'
    | '/_authenticated/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  PublicRoute: typeof PublicRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  PublicRoute: PublicRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_public"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/about",
        "/_authenticated/contact",
        "/_authenticated/hono-demo",
        "/_authenticated/trpc-demo",
        "/_authenticated/"
      ]
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/login"
      ]
    },
    "/_authenticated/about": {
      "filePath": "_authenticated/about.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/contact": {
      "filePath": "_authenticated/contact.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/hono-demo": {
      "filePath": "_authenticated/hono-demo.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/trpc-demo": {
      "filePath": "_authenticated/trpc-demo.tsx",
      "parent": "/_authenticated"
    },
    "/_public/login": {
      "filePath": "_public/login.tsx",
      "parent": "/_public"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
